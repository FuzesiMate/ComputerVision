// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ComputerVisionObjectPositions.proto

#ifndef PROTOBUF_ComputerVisionObjectPositions_2eproto__INCLUDED
#define PROTOBUF_ComputerVisionObjectPositions_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace modes3 {
namespace protobuf {
class ComputerVisionObjectPositions;
class ComputerVisionObjectPositionsDefaultTypeInternal;
extern ComputerVisionObjectPositionsDefaultTypeInternal _ComputerVisionObjectPositions_default_instance_;
class ComputerVisionObjectPositions_PhysicalObjectsEntry;
class ComputerVisionObjectPositions_PhysicalObjectsEntryDefaultTypeInternal;
extern ComputerVisionObjectPositions_PhysicalObjectsEntryDefaultTypeInternal _ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_;
class Marker;
class MarkerDefaultTypeInternal;
extern MarkerDefaultTypeInternal _Marker_default_instance_;
class PhysicalObject;
class PhysicalObjectDefaultTypeInternal;
extern PhysicalObjectDefaultTypeInternal _PhysicalObject_default_instance_;
class PhysicalObject_MarkersEntry;
class PhysicalObject_MarkersEntryDefaultTypeInternal;
extern PhysicalObject_MarkersEntryDefaultTypeInternal _PhysicalObject_MarkersEntry_default_instance_;
class ThreeDPosition;
class ThreeDPositionDefaultTypeInternal;
extern ThreeDPositionDefaultTypeInternal _ThreeDPosition_default_instance_;
class TwoDPosition;
class TwoDPositionDefaultTypeInternal;
extern TwoDPositionDefaultTypeInternal _TwoDPosition_default_instance_;
}  // namespace protobuf
}  // namespace modes3

namespace modes3 {
namespace protobuf {

namespace protobuf_ComputerVisionObjectPositions_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ComputerVisionObjectPositions_2eproto

// ===================================================================


// -------------------------------------------------------------------

class ComputerVisionObjectPositions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.ComputerVisionObjectPositions) */ {
 public:
  ComputerVisionObjectPositions();
  virtual ~ComputerVisionObjectPositions();

  ComputerVisionObjectPositions(const ComputerVisionObjectPositions& from);

  inline ComputerVisionObjectPositions& operator=(const ComputerVisionObjectPositions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComputerVisionObjectPositions(ComputerVisionObjectPositions&& from) noexcept
    : ComputerVisionObjectPositions() {
    *this = ::std::move(from);
  }

  inline ComputerVisionObjectPositions& operator=(ComputerVisionObjectPositions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputerVisionObjectPositions& default_instance();

  static inline const ComputerVisionObjectPositions* internal_default_instance() {
    return reinterpret_cast<const ComputerVisionObjectPositions*>(
               &_ComputerVisionObjectPositions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ComputerVisionObjectPositions* other);
  friend void swap(ComputerVisionObjectPositions& a, ComputerVisionObjectPositions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComputerVisionObjectPositions* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputerVisionObjectPositions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputerVisionObjectPositions& from);
  void MergeFrom(const ComputerVisionObjectPositions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputerVisionObjectPositions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
  int physicalobjects_size() const;
  void clear_physicalobjects();
  static const int kPhysicalObjectsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >&
      physicalobjects() const;
  ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >*
      mutable_physicalobjects();

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int64 frameindex = 3;
  void clear_frameindex();
  static const int kFrameindexFieldNumber = 3;
  ::google::protobuf::int64 frameindex() const;
  void set_frameindex(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.ComputerVisionObjectPositions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ComputerVisionObjectPositions_PhysicalObjectsEntry : public ::google::protobuf::internal::MapEntry<ComputerVisionObjectPositions_PhysicalObjectsEntry, 
      ::std::string, ::modes3::protobuf::PhysicalObject,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ComputerVisionObjectPositions_PhysicalObjectsEntry, 
      ::std::string, ::modes3::protobuf::PhysicalObject,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ComputerVisionObjectPositions_PhysicalObjectsEntry();
    ComputerVisionObjectPositions_PhysicalObjectsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ComputerVisionObjectPositions_PhysicalObjectsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ComputerVisionObjectPositions_PhysicalObjectsEntry,
      ::std::string, ::modes3::protobuf::PhysicalObject,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > physicalobjects_;
  private:
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 frameindex_;
  mutable int _cached_size_;
  friend struct protobuf_ComputerVisionObjectPositions_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PhysicalObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.PhysicalObject) */ {
 public:
  PhysicalObject();
  virtual ~PhysicalObject();

  PhysicalObject(const PhysicalObject& from);

  inline PhysicalObject& operator=(const PhysicalObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhysicalObject(PhysicalObject&& from) noexcept
    : PhysicalObject() {
    *this = ::std::move(from);
  }

  inline PhysicalObject& operator=(PhysicalObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhysicalObject& default_instance();

  static inline const PhysicalObject* internal_default_instance() {
    return reinterpret_cast<const PhysicalObject*>(
               &_PhysicalObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PhysicalObject* other);
  friend void swap(PhysicalObject& a, PhysicalObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhysicalObject* New() const PROTOBUF_FINAL { return New(NULL); }

  PhysicalObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhysicalObject& from);
  void MergeFrom(const PhysicalObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhysicalObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .modes3.protobuf.Marker> markers = 2;
  int markers_size() const;
  void clear_markers();
  static const int kMarkersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >&
      markers() const;
  ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >*
      mutable_markers();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.PhysicalObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PhysicalObject_MarkersEntry : public ::google::protobuf::internal::MapEntry<PhysicalObject_MarkersEntry, 
      ::std::string, ::modes3::protobuf::Marker,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PhysicalObject_MarkersEntry, 
      ::std::string, ::modes3::protobuf::Marker,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PhysicalObject_MarkersEntry();
    PhysicalObject_MarkersEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PhysicalObject_MarkersEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PhysicalObject_MarkersEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PhysicalObject_MarkersEntry,
      ::std::string, ::modes3::protobuf::Marker,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > markers_;
  private:
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_ComputerVisionObjectPositions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Marker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.Marker) */ {
 public:
  Marker();
  virtual ~Marker();

  Marker(const Marker& from);

  inline Marker& operator=(const Marker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Marker(Marker&& from) noexcept
    : Marker() {
    *this = ::std::move(from);
  }

  inline Marker& operator=(Marker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Marker& default_instance();

  static inline const Marker* internal_default_instance() {
    return reinterpret_cast<const Marker*>(
               &_Marker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Marker* other);
  friend void swap(Marker& a, Marker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Marker* New() const PROTOBUF_FINAL { return New(NULL); }

  Marker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Marker& from);
  void MergeFrom(const Marker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Marker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
  int screenpositions_size() const;
  void clear_screenpositions();
  static const int kScreenPositionsFieldNumber = 3;
  const ::modes3::protobuf::TwoDPosition& screenpositions(int index) const;
  ::modes3::protobuf::TwoDPosition* mutable_screenpositions(int index);
  ::modes3::protobuf::TwoDPosition* add_screenpositions();
  ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >*
      mutable_screenpositions();
  const ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >&
      screenpositions() const;

  // repeated bool tracked = 4;
  int tracked_size() const;
  void clear_tracked();
  static const int kTrackedFieldNumber = 4;
  bool tracked(int index) const;
  void set_tracked(int index, bool value);
  void add_tracked(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      tracked() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_tracked();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .modes3.protobuf.ThreeDPosition realposition = 2;
  bool has_realposition() const;
  void clear_realposition();
  static const int kRealpositionFieldNumber = 2;
  const ::modes3::protobuf::ThreeDPosition& realposition() const;
  ::modes3::protobuf::ThreeDPosition* mutable_realposition();
  ::modes3::protobuf::ThreeDPosition* release_realposition();
  void set_allocated_realposition(::modes3::protobuf::ThreeDPosition* realposition);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.Marker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition > screenpositions_;
  ::google::protobuf::RepeatedField< bool > tracked_;
  mutable int _tracked_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::modes3::protobuf::ThreeDPosition* realposition_;
  mutable int _cached_size_;
  friend struct protobuf_ComputerVisionObjectPositions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ThreeDPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.ThreeDPosition) */ {
 public:
  ThreeDPosition();
  virtual ~ThreeDPosition();

  ThreeDPosition(const ThreeDPosition& from);

  inline ThreeDPosition& operator=(const ThreeDPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ThreeDPosition(ThreeDPosition&& from) noexcept
    : ThreeDPosition() {
    *this = ::std::move(from);
  }

  inline ThreeDPosition& operator=(ThreeDPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThreeDPosition& default_instance();

  static inline const ThreeDPosition* internal_default_instance() {
    return reinterpret_cast<const ThreeDPosition*>(
               &_ThreeDPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ThreeDPosition* other);
  friend void swap(ThreeDPosition& a, ThreeDPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ThreeDPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  ThreeDPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ThreeDPosition& from);
  void MergeFrom(const ThreeDPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ThreeDPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.ThreeDPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct protobuf_ComputerVisionObjectPositions_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TwoDPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.TwoDPosition) */ {
 public:
  TwoDPosition();
  virtual ~TwoDPosition();

  TwoDPosition(const TwoDPosition& from);

  inline TwoDPosition& operator=(const TwoDPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TwoDPosition(TwoDPosition&& from) noexcept
    : TwoDPosition() {
    *this = ::std::move(from);
  }

  inline TwoDPosition& operator=(TwoDPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TwoDPosition& default_instance();

  static inline const TwoDPosition* internal_default_instance() {
    return reinterpret_cast<const TwoDPosition*>(
               &_TwoDPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TwoDPosition* other);
  friend void swap(TwoDPosition& a, TwoDPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TwoDPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  TwoDPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TwoDPosition& from);
  void MergeFrom(const TwoDPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TwoDPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.TwoDPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend struct protobuf_ComputerVisionObjectPositions_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ComputerVisionObjectPositions

// map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
inline int ComputerVisionObjectPositions::physicalobjects_size() const {
  return physicalobjects_.size();
}
inline void ComputerVisionObjectPositions::clear_physicalobjects() {
  physicalobjects_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >&
ComputerVisionObjectPositions::physicalobjects() const {
  // @@protoc_insertion_point(field_map:modes3.protobuf.ComputerVisionObjectPositions.physicalObjects)
  return physicalobjects_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >*
ComputerVisionObjectPositions::mutable_physicalobjects() {
  // @@protoc_insertion_point(field_mutable_map:modes3.protobuf.ComputerVisionObjectPositions.physicalObjects)
  return physicalobjects_.MutableMap();
}

// int64 timestamp = 2;
inline void ComputerVisionObjectPositions::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ComputerVisionObjectPositions::timestamp() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ComputerVisionObjectPositions.timestamp)
  return timestamp_;
}
inline void ComputerVisionObjectPositions::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ComputerVisionObjectPositions.timestamp)
}

// int64 frameindex = 3;
inline void ComputerVisionObjectPositions::clear_frameindex() {
  frameindex_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ComputerVisionObjectPositions::frameindex() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ComputerVisionObjectPositions.frameindex)
  return frameindex_;
}
inline void ComputerVisionObjectPositions::set_frameindex(::google::protobuf::int64 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ComputerVisionObjectPositions.frameindex)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PhysicalObject

// string name = 1;
inline void PhysicalObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhysicalObject::name() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.PhysicalObject.name)
  return name_.GetNoArena();
}
inline void PhysicalObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.PhysicalObject.name)
}
#if LANG_CXX11
inline void PhysicalObject::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:modes3.protobuf.PhysicalObject.name)
}
#endif
inline void PhysicalObject::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:modes3.protobuf.PhysicalObject.name)
}
inline void PhysicalObject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:modes3.protobuf.PhysicalObject.name)
}
inline ::std::string* PhysicalObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.PhysicalObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhysicalObject::release_name() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.PhysicalObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhysicalObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.PhysicalObject.name)
}

// map<string, .modes3.protobuf.Marker> markers = 2;
inline int PhysicalObject::markers_size() const {
  return markers_.size();
}
inline void PhysicalObject::clear_markers() {
  markers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >&
PhysicalObject::markers() const {
  // @@protoc_insertion_point(field_map:modes3.protobuf.PhysicalObject.markers)
  return markers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >*
PhysicalObject::mutable_markers() {
  // @@protoc_insertion_point(field_mutable_map:modes3.protobuf.PhysicalObject.markers)
  return markers_.MutableMap();
}

// -------------------------------------------------------------------

// Marker

// string name = 1;
inline void Marker::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Marker::name() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.name)
  return name_.GetNoArena();
}
inline void Marker::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.Marker.name)
}
#if LANG_CXX11
inline void Marker::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:modes3.protobuf.Marker.name)
}
#endif
inline void Marker::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:modes3.protobuf.Marker.name)
}
inline void Marker::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:modes3.protobuf.Marker.name)
}
inline ::std::string* Marker::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Marker::release_name() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Marker.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Marker::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Marker.name)
}

// .modes3.protobuf.ThreeDPosition realposition = 2;
inline bool Marker::has_realposition() const {
  return this != internal_default_instance() && realposition_ != NULL;
}
inline void Marker::clear_realposition() {
  if (GetArenaNoVirtual() == NULL && realposition_ != NULL) delete realposition_;
  realposition_ = NULL;
}
inline const ::modes3::protobuf::ThreeDPosition& Marker::realposition() const {
  const ::modes3::protobuf::ThreeDPosition* p = realposition_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.realposition)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::ThreeDPosition*>(
      &::modes3::protobuf::_ThreeDPosition_default_instance_);
}
inline ::modes3::protobuf::ThreeDPosition* Marker::mutable_realposition() {
  
  if (realposition_ == NULL) {
    realposition_ = new ::modes3::protobuf::ThreeDPosition;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.realposition)
  return realposition_;
}
inline ::modes3::protobuf::ThreeDPosition* Marker::release_realposition() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Marker.realposition)
  
  ::modes3::protobuf::ThreeDPosition* temp = realposition_;
  realposition_ = NULL;
  return temp;
}
inline void Marker::set_allocated_realposition(::modes3::protobuf::ThreeDPosition* realposition) {
  delete realposition_;
  realposition_ = realposition;
  if (realposition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Marker.realposition)
}

// repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
inline int Marker::screenpositions_size() const {
  return screenpositions_.size();
}
inline void Marker::clear_screenpositions() {
  screenpositions_.Clear();
}
inline const ::modes3::protobuf::TwoDPosition& Marker::screenpositions(int index) const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Get(index);
}
inline ::modes3::protobuf::TwoDPosition* Marker::mutable_screenpositions(int index) {
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Mutable(index);
}
inline ::modes3::protobuf::TwoDPosition* Marker::add_screenpositions() {
  // @@protoc_insertion_point(field_add:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >*
Marker::mutable_screenpositions() {
  // @@protoc_insertion_point(field_mutable_list:modes3.protobuf.Marker.screenPositions)
  return &screenpositions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >&
Marker::screenpositions() const {
  // @@protoc_insertion_point(field_list:modes3.protobuf.Marker.screenPositions)
  return screenpositions_;
}

// repeated bool tracked = 4;
inline int Marker::tracked_size() const {
  return tracked_.size();
}
inline void Marker::clear_tracked() {
  tracked_.Clear();
}
inline bool Marker::tracked(int index) const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.tracked)
  return tracked_.Get(index);
}
inline void Marker::set_tracked(int index, bool value) {
  tracked_.Set(index, value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.Marker.tracked)
}
inline void Marker::add_tracked(bool value) {
  tracked_.Add(value);
  // @@protoc_insertion_point(field_add:modes3.protobuf.Marker.tracked)
}
inline const ::google::protobuf::RepeatedField< bool >&
Marker::tracked() const {
  // @@protoc_insertion_point(field_list:modes3.protobuf.Marker.tracked)
  return tracked_;
}
inline ::google::protobuf::RepeatedField< bool >*
Marker::mutable_tracked() {
  // @@protoc_insertion_point(field_mutable_list:modes3.protobuf.Marker.tracked)
  return &tracked_;
}

// -------------------------------------------------------------------

// ThreeDPosition

// double x = 1;
inline void ThreeDPosition::clear_x() {
  x_ = 0;
}
inline double ThreeDPosition::x() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.x)
  return x_;
}
inline void ThreeDPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.x)
}

// double y = 2;
inline void ThreeDPosition::clear_y() {
  y_ = 0;
}
inline double ThreeDPosition::y() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.y)
  return y_;
}
inline void ThreeDPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.y)
}

// double z = 3;
inline void ThreeDPosition::clear_z() {
  z_ = 0;
}
inline double ThreeDPosition::z() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.z)
  return z_;
}
inline void ThreeDPosition::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.z)
}

// -------------------------------------------------------------------

// TwoDPosition

// double x = 1;
inline void TwoDPosition::clear_x() {
  x_ = 0;
}
inline double TwoDPosition::x() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TwoDPosition.x)
  return x_;
}
inline void TwoDPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TwoDPosition.x)
}

// double y = 2;
inline void TwoDPosition::clear_y() {
  y_ = 0;
}
inline double TwoDPosition::y() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TwoDPosition.y)
  return y_;
}
inline void TwoDPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TwoDPosition.y)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ComputerVisionObjectPositions_2eproto__INCLUDED
