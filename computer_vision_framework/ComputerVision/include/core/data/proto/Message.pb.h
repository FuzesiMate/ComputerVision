// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto__INCLUDED
#define PROTOBUF_Message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "DccOperationsCommand.pb.h"
#include "DccOperationsState.pb.h"
#include "Enums.pb.h"
#include "SegmentCommand.pb.h"
#include "SegmentState.pb.h"
#include "TrainCurrentSegment.pb.h"
#include "TrainCurrentSpeed.pb.h"
#include "TrainFunctionCommand.pb.h"
#include "TrainFunctionState.pb.h"
#include "TrainReferenceSpeed.pb.h"
#include "TrainReferenceSpeedCommand.pb.h"
#include "TurnoutCommand.pb.h"
#include "TurnoutState.pb.h"
#include "TurnoutReferenceCommand.pb.h"
#include "TurnoutReferenceState.pb.h"
#include "SegmentOccupancy.pb.h"
#include "YakinduReleaseTo.pb.h"
#include "YakinduCanGoTo.pb.h"
#include "YakinduCannotGoTo.pb.h"
#include "YakinduReserveTo.pb.h"
#include "SendAllStatus.pb.h"
#include "ComputerVisionObjectPositions.pb.h"
// @@protoc_insertion_point(includes)
namespace modes3 {
namespace protobuf {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
}  // namespace protobuf
}  // namespace modes3

namespace modes3 {
namespace protobuf {

namespace protobuf_Message_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Message_2eproto

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .modes3.protobuf.SegmentCommand segmentCommand = 2;
  bool has_segmentcommand() const;
  void clear_segmentcommand();
  static const int kSegmentCommandFieldNumber = 2;
  const ::modes3::protobuf::SegmentCommand& segmentcommand() const;
  ::modes3::protobuf::SegmentCommand* mutable_segmentcommand();
  ::modes3::protobuf::SegmentCommand* release_segmentcommand();
  void set_allocated_segmentcommand(::modes3::protobuf::SegmentCommand* segmentcommand);

  // .modes3.protobuf.SegmentState segmentState = 3;
  bool has_segmentstate() const;
  void clear_segmentstate();
  static const int kSegmentStateFieldNumber = 3;
  const ::modes3::protobuf::SegmentState& segmentstate() const;
  ::modes3::protobuf::SegmentState* mutable_segmentstate();
  ::modes3::protobuf::SegmentState* release_segmentstate();
  void set_allocated_segmentstate(::modes3::protobuf::SegmentState* segmentstate);

  // .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
  bool has_traincurrentsegment() const;
  void clear_traincurrentsegment();
  static const int kTrainCurrentSegmentFieldNumber = 4;
  const ::modes3::protobuf::TrainCurrentSegment& traincurrentsegment() const;
  ::modes3::protobuf::TrainCurrentSegment* mutable_traincurrentsegment();
  ::modes3::protobuf::TrainCurrentSegment* release_traincurrentsegment();
  void set_allocated_traincurrentsegment(::modes3::protobuf::TrainCurrentSegment* traincurrentsegment);

  // .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
  bool has_traincurrentspeed() const;
  void clear_traincurrentspeed();
  static const int kTrainCurrentSpeedFieldNumber = 5;
  const ::modes3::protobuf::TrainCurrentSpeed& traincurrentspeed() const;
  ::modes3::protobuf::TrainCurrentSpeed* mutable_traincurrentspeed();
  ::modes3::protobuf::TrainCurrentSpeed* release_traincurrentspeed();
  void set_allocated_traincurrentspeed(::modes3::protobuf::TrainCurrentSpeed* traincurrentspeed);

  // .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
  bool has_trainreferencespeed() const;
  void clear_trainreferencespeed();
  static const int kTrainReferenceSpeedFieldNumber = 7;
  const ::modes3::protobuf::TrainReferenceSpeed& trainreferencespeed() const;
  ::modes3::protobuf::TrainReferenceSpeed* mutable_trainreferencespeed();
  ::modes3::protobuf::TrainReferenceSpeed* release_trainreferencespeed();
  void set_allocated_trainreferencespeed(::modes3::protobuf::TrainReferenceSpeed* trainreferencespeed);

  // .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
  bool has_trainreferencespeedcommand() const;
  void clear_trainreferencespeedcommand();
  static const int kTrainReferenceSpeedCommandFieldNumber = 8;
  const ::modes3::protobuf::TrainReferenceSpeedCommand& trainreferencespeedcommand() const;
  ::modes3::protobuf::TrainReferenceSpeedCommand* mutable_trainreferencespeedcommand();
  ::modes3::protobuf::TrainReferenceSpeedCommand* release_trainreferencespeedcommand();
  void set_allocated_trainreferencespeedcommand(::modes3::protobuf::TrainReferenceSpeedCommand* trainreferencespeedcommand);

  // .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
  bool has_turnoutcommand() const;
  void clear_turnoutcommand();
  static const int kTurnoutCommandFieldNumber = 9;
  const ::modes3::protobuf::TurnoutCommand& turnoutcommand() const;
  ::modes3::protobuf::TurnoutCommand* mutable_turnoutcommand();
  ::modes3::protobuf::TurnoutCommand* release_turnoutcommand();
  void set_allocated_turnoutcommand(::modes3::protobuf::TurnoutCommand* turnoutcommand);

  // .modes3.protobuf.TurnoutState turnoutState = 10;
  bool has_turnoutstate() const;
  void clear_turnoutstate();
  static const int kTurnoutStateFieldNumber = 10;
  const ::modes3::protobuf::TurnoutState& turnoutstate() const;
  ::modes3::protobuf::TurnoutState* mutable_turnoutstate();
  ::modes3::protobuf::TurnoutState* release_turnoutstate();
  void set_allocated_turnoutstate(::modes3::protobuf::TurnoutState* turnoutstate);

  // .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
  bool has_segmentoccupancy() const;
  void clear_segmentoccupancy();
  static const int kSegmentOccupancyFieldNumber = 11;
  const ::modes3::protobuf::SegmentOccupancy& segmentoccupancy() const;
  ::modes3::protobuf::SegmentOccupancy* mutable_segmentoccupancy();
  ::modes3::protobuf::SegmentOccupancy* release_segmentoccupancy();
  void set_allocated_segmentoccupancy(::modes3::protobuf::SegmentOccupancy* segmentoccupancy);

  // .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
  bool has_yakindureleaseto() const;
  void clear_yakindureleaseto();
  static const int kYakinduReleaseToFieldNumber = 12;
  const ::modes3::protobuf::YakinduReleaseTo& yakindureleaseto() const;
  ::modes3::protobuf::YakinduReleaseTo* mutable_yakindureleaseto();
  ::modes3::protobuf::YakinduReleaseTo* release_yakindureleaseto();
  void set_allocated_yakindureleaseto(::modes3::protobuf::YakinduReleaseTo* yakindureleaseto);

  // .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
  bool has_yakinducangoto() const;
  void clear_yakinducangoto();
  static const int kYakinduCanGoToFieldNumber = 13;
  const ::modes3::protobuf::YakinduCanGoTo& yakinducangoto() const;
  ::modes3::protobuf::YakinduCanGoTo* mutable_yakinducangoto();
  ::modes3::protobuf::YakinduCanGoTo* release_yakinducangoto();
  void set_allocated_yakinducangoto(::modes3::protobuf::YakinduCanGoTo* yakinducangoto);

  // .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
  bool has_yakinducannotgoto() const;
  void clear_yakinducannotgoto();
  static const int kYakinduCannotGoToFieldNumber = 14;
  const ::modes3::protobuf::YakinduCannotGoTo& yakinducannotgoto() const;
  ::modes3::protobuf::YakinduCannotGoTo* mutable_yakinducannotgoto();
  ::modes3::protobuf::YakinduCannotGoTo* release_yakinducannotgoto();
  void set_allocated_yakinducannotgoto(::modes3::protobuf::YakinduCannotGoTo* yakinducannotgoto);

  // .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
  bool has_yakindureserveto() const;
  void clear_yakindureserveto();
  static const int kYakinduReserveToFieldNumber = 15;
  const ::modes3::protobuf::YakinduReserveTo& yakindureserveto() const;
  ::modes3::protobuf::YakinduReserveTo* mutable_yakindureserveto();
  ::modes3::protobuf::YakinduReserveTo* release_yakindureserveto();
  void set_allocated_yakindureserveto(::modes3::protobuf::YakinduReserveTo* yakindureserveto);

  // .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
  bool has_turnoutreferencecommand() const;
  void clear_turnoutreferencecommand();
  static const int kTurnoutReferenceCommandFieldNumber = 16;
  const ::modes3::protobuf::TurnoutReferenceCommand& turnoutreferencecommand() const;
  ::modes3::protobuf::TurnoutReferenceCommand* mutable_turnoutreferencecommand();
  ::modes3::protobuf::TurnoutReferenceCommand* release_turnoutreferencecommand();
  void set_allocated_turnoutreferencecommand(::modes3::protobuf::TurnoutReferenceCommand* turnoutreferencecommand);

  // .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
  bool has_turnoutreferencestate() const;
  void clear_turnoutreferencestate();
  static const int kTurnoutReferenceStateFieldNumber = 17;
  const ::modes3::protobuf::TurnoutReferenceState& turnoutreferencestate() const;
  ::modes3::protobuf::TurnoutReferenceState* mutable_turnoutreferencestate();
  ::modes3::protobuf::TurnoutReferenceState* release_turnoutreferencestate();
  void set_allocated_turnoutreferencestate(::modes3::protobuf::TurnoutReferenceState* turnoutreferencestate);

  // .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
  bool has_trainfunctioncommand() const;
  void clear_trainfunctioncommand();
  static const int kTrainFunctionCommandFieldNumber = 18;
  const ::modes3::protobuf::TrainFunctionCommand& trainfunctioncommand() const;
  ::modes3::protobuf::TrainFunctionCommand* mutable_trainfunctioncommand();
  ::modes3::protobuf::TrainFunctionCommand* release_trainfunctioncommand();
  void set_allocated_trainfunctioncommand(::modes3::protobuf::TrainFunctionCommand* trainfunctioncommand);

  // .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
  bool has_trainfunctionstate() const;
  void clear_trainfunctionstate();
  static const int kTrainFunctionStateFieldNumber = 19;
  const ::modes3::protobuf::TrainFunctionState& trainfunctionstate() const;
  ::modes3::protobuf::TrainFunctionState* mutable_trainfunctionstate();
  ::modes3::protobuf::TrainFunctionState* release_trainfunctionstate();
  void set_allocated_trainfunctionstate(::modes3::protobuf::TrainFunctionState* trainfunctionstate);

  // .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
  bool has_dccoperationscommand() const;
  void clear_dccoperationscommand();
  static const int kDccOperationsCommandFieldNumber = 20;
  const ::modes3::protobuf::DccOperationsCommand& dccoperationscommand() const;
  ::modes3::protobuf::DccOperationsCommand* mutable_dccoperationscommand();
  ::modes3::protobuf::DccOperationsCommand* release_dccoperationscommand();
  void set_allocated_dccoperationscommand(::modes3::protobuf::DccOperationsCommand* dccoperationscommand);

  // .modes3.protobuf.DccOperationsState dccOperationsState = 21;
  bool has_dccoperationsstate() const;
  void clear_dccoperationsstate();
  static const int kDccOperationsStateFieldNumber = 21;
  const ::modes3::protobuf::DccOperationsState& dccoperationsstate() const;
  ::modes3::protobuf::DccOperationsState* mutable_dccoperationsstate();
  ::modes3::protobuf::DccOperationsState* release_dccoperationsstate();
  void set_allocated_dccoperationsstate(::modes3::protobuf::DccOperationsState* dccoperationsstate);

  // .modes3.protobuf.SendAllStatus allStatus = 22;
  bool has_allstatus() const;
  void clear_allstatus();
  static const int kAllStatusFieldNumber = 22;
  const ::modes3::protobuf::SendAllStatus& allstatus() const;
  ::modes3::protobuf::SendAllStatus* mutable_allstatus();
  ::modes3::protobuf::SendAllStatus* release_allstatus();
  void set_allocated_allstatus(::modes3::protobuf::SendAllStatus* allstatus);

  // .modes3.protobuf.ComputerVisionObjectPositions computerVisionObjectPositions = 23;
  bool has_computervisionobjectpositions() const;
  void clear_computervisionobjectpositions();
  static const int kComputerVisionObjectPositionsFieldNumber = 23;
  const ::modes3::protobuf::ComputerVisionObjectPositions& computervisionobjectpositions() const;
  ::modes3::protobuf::ComputerVisionObjectPositions* mutable_computervisionobjectpositions();
  ::modes3::protobuf::ComputerVisionObjectPositions* release_computervisionobjectpositions();
  void set_allocated_computervisionobjectpositions(::modes3::protobuf::ComputerVisionObjectPositions* computervisionobjectpositions);

  // .modes3.protobuf.MessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::modes3::protobuf::MessageType type() const;
  void set_type(::modes3::protobuf::MessageType value);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::modes3::protobuf::SegmentCommand* segmentcommand_;
  ::modes3::protobuf::SegmentState* segmentstate_;
  ::modes3::protobuf::TrainCurrentSegment* traincurrentsegment_;
  ::modes3::protobuf::TrainCurrentSpeed* traincurrentspeed_;
  ::modes3::protobuf::TrainReferenceSpeed* trainreferencespeed_;
  ::modes3::protobuf::TrainReferenceSpeedCommand* trainreferencespeedcommand_;
  ::modes3::protobuf::TurnoutCommand* turnoutcommand_;
  ::modes3::protobuf::TurnoutState* turnoutstate_;
  ::modes3::protobuf::SegmentOccupancy* segmentoccupancy_;
  ::modes3::protobuf::YakinduReleaseTo* yakindureleaseto_;
  ::modes3::protobuf::YakinduCanGoTo* yakinducangoto_;
  ::modes3::protobuf::YakinduCannotGoTo* yakinducannotgoto_;
  ::modes3::protobuf::YakinduReserveTo* yakindureserveto_;
  ::modes3::protobuf::TurnoutReferenceCommand* turnoutreferencecommand_;
  ::modes3::protobuf::TurnoutReferenceState* turnoutreferencestate_;
  ::modes3::protobuf::TrainFunctionCommand* trainfunctioncommand_;
  ::modes3::protobuf::TrainFunctionState* trainfunctionstate_;
  ::modes3::protobuf::DccOperationsCommand* dccoperationscommand_;
  ::modes3::protobuf::DccOperationsState* dccoperationsstate_;
  ::modes3::protobuf::SendAllStatus* allstatus_;
  ::modes3::protobuf::ComputerVisionObjectPositions* computervisionobjectpositions_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_Message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message

// .modes3.protobuf.MessageType type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::modes3::protobuf::MessageType Message::type() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.type)
  return static_cast< ::modes3::protobuf::MessageType >(type_);
}
inline void Message::set_type(::modes3::protobuf::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.Message.type)
}

// .modes3.protobuf.SegmentCommand segmentCommand = 2;
inline bool Message::has_segmentcommand() const {
  return this != internal_default_instance() && segmentcommand_ != NULL;
}
inline void Message::clear_segmentcommand() {
  if (GetArenaNoVirtual() == NULL && segmentcommand_ != NULL) delete segmentcommand_;
  segmentcommand_ = NULL;
}
inline const ::modes3::protobuf::SegmentCommand& Message::segmentcommand() const {
  const ::modes3::protobuf::SegmentCommand* p = segmentcommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::SegmentCommand*>(
      &::modes3::protobuf::_SegmentCommand_default_instance_);
}
inline ::modes3::protobuf::SegmentCommand* Message::mutable_segmentcommand() {
  
  if (segmentcommand_ == NULL) {
    segmentcommand_ = new ::modes3::protobuf::SegmentCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentCommand)
  return segmentcommand_;
}
inline ::modes3::protobuf::SegmentCommand* Message::release_segmentcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentCommand)
  
  ::modes3::protobuf::SegmentCommand* temp = segmentcommand_;
  segmentcommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_segmentcommand(::modes3::protobuf::SegmentCommand* segmentcommand) {
  delete segmentcommand_;
  segmentcommand_ = segmentcommand;
  if (segmentcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentCommand)
}

// .modes3.protobuf.SegmentState segmentState = 3;
inline bool Message::has_segmentstate() const {
  return this != internal_default_instance() && segmentstate_ != NULL;
}
inline void Message::clear_segmentstate() {
  if (GetArenaNoVirtual() == NULL && segmentstate_ != NULL) delete segmentstate_;
  segmentstate_ = NULL;
}
inline const ::modes3::protobuf::SegmentState& Message::segmentstate() const {
  const ::modes3::protobuf::SegmentState* p = segmentstate_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentState)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::SegmentState*>(
      &::modes3::protobuf::_SegmentState_default_instance_);
}
inline ::modes3::protobuf::SegmentState* Message::mutable_segmentstate() {
  
  if (segmentstate_ == NULL) {
    segmentstate_ = new ::modes3::protobuf::SegmentState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentState)
  return segmentstate_;
}
inline ::modes3::protobuf::SegmentState* Message::release_segmentstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentState)
  
  ::modes3::protobuf::SegmentState* temp = segmentstate_;
  segmentstate_ = NULL;
  return temp;
}
inline void Message::set_allocated_segmentstate(::modes3::protobuf::SegmentState* segmentstate) {
  delete segmentstate_;
  segmentstate_ = segmentstate;
  if (segmentstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentState)
}

// .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
inline bool Message::has_traincurrentsegment() const {
  return this != internal_default_instance() && traincurrentsegment_ != NULL;
}
inline void Message::clear_traincurrentsegment() {
  if (GetArenaNoVirtual() == NULL && traincurrentsegment_ != NULL) delete traincurrentsegment_;
  traincurrentsegment_ = NULL;
}
inline const ::modes3::protobuf::TrainCurrentSegment& Message::traincurrentsegment() const {
  const ::modes3::protobuf::TrainCurrentSegment* p = traincurrentsegment_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainCurrentSegment)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainCurrentSegment*>(
      &::modes3::protobuf::_TrainCurrentSegment_default_instance_);
}
inline ::modes3::protobuf::TrainCurrentSegment* Message::mutable_traincurrentsegment() {
  
  if (traincurrentsegment_ == NULL) {
    traincurrentsegment_ = new ::modes3::protobuf::TrainCurrentSegment;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainCurrentSegment)
  return traincurrentsegment_;
}
inline ::modes3::protobuf::TrainCurrentSegment* Message::release_traincurrentsegment() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainCurrentSegment)
  
  ::modes3::protobuf::TrainCurrentSegment* temp = traincurrentsegment_;
  traincurrentsegment_ = NULL;
  return temp;
}
inline void Message::set_allocated_traincurrentsegment(::modes3::protobuf::TrainCurrentSegment* traincurrentsegment) {
  delete traincurrentsegment_;
  traincurrentsegment_ = traincurrentsegment;
  if (traincurrentsegment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainCurrentSegment)
}

// .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
inline bool Message::has_traincurrentspeed() const {
  return this != internal_default_instance() && traincurrentspeed_ != NULL;
}
inline void Message::clear_traincurrentspeed() {
  if (GetArenaNoVirtual() == NULL && traincurrentspeed_ != NULL) delete traincurrentspeed_;
  traincurrentspeed_ = NULL;
}
inline const ::modes3::protobuf::TrainCurrentSpeed& Message::traincurrentspeed() const {
  const ::modes3::protobuf::TrainCurrentSpeed* p = traincurrentspeed_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainCurrentSpeed)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainCurrentSpeed*>(
      &::modes3::protobuf::_TrainCurrentSpeed_default_instance_);
}
inline ::modes3::protobuf::TrainCurrentSpeed* Message::mutable_traincurrentspeed() {
  
  if (traincurrentspeed_ == NULL) {
    traincurrentspeed_ = new ::modes3::protobuf::TrainCurrentSpeed;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainCurrentSpeed)
  return traincurrentspeed_;
}
inline ::modes3::protobuf::TrainCurrentSpeed* Message::release_traincurrentspeed() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainCurrentSpeed)
  
  ::modes3::protobuf::TrainCurrentSpeed* temp = traincurrentspeed_;
  traincurrentspeed_ = NULL;
  return temp;
}
inline void Message::set_allocated_traincurrentspeed(::modes3::protobuf::TrainCurrentSpeed* traincurrentspeed) {
  delete traincurrentspeed_;
  traincurrentspeed_ = traincurrentspeed;
  if (traincurrentspeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainCurrentSpeed)
}

// .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
inline bool Message::has_trainreferencespeed() const {
  return this != internal_default_instance() && trainreferencespeed_ != NULL;
}
inline void Message::clear_trainreferencespeed() {
  if (GetArenaNoVirtual() == NULL && trainreferencespeed_ != NULL) delete trainreferencespeed_;
  trainreferencespeed_ = NULL;
}
inline const ::modes3::protobuf::TrainReferenceSpeed& Message::trainreferencespeed() const {
  const ::modes3::protobuf::TrainReferenceSpeed* p = trainreferencespeed_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainReferenceSpeed)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainReferenceSpeed*>(
      &::modes3::protobuf::_TrainReferenceSpeed_default_instance_);
}
inline ::modes3::protobuf::TrainReferenceSpeed* Message::mutable_trainreferencespeed() {
  
  if (trainreferencespeed_ == NULL) {
    trainreferencespeed_ = new ::modes3::protobuf::TrainReferenceSpeed;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainReferenceSpeed)
  return trainreferencespeed_;
}
inline ::modes3::protobuf::TrainReferenceSpeed* Message::release_trainreferencespeed() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainReferenceSpeed)
  
  ::modes3::protobuf::TrainReferenceSpeed* temp = trainreferencespeed_;
  trainreferencespeed_ = NULL;
  return temp;
}
inline void Message::set_allocated_trainreferencespeed(::modes3::protobuf::TrainReferenceSpeed* trainreferencespeed) {
  delete trainreferencespeed_;
  trainreferencespeed_ = trainreferencespeed;
  if (trainreferencespeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainReferenceSpeed)
}

// .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
inline bool Message::has_trainreferencespeedcommand() const {
  return this != internal_default_instance() && trainreferencespeedcommand_ != NULL;
}
inline void Message::clear_trainreferencespeedcommand() {
  if (GetArenaNoVirtual() == NULL && trainreferencespeedcommand_ != NULL) delete trainreferencespeedcommand_;
  trainreferencespeedcommand_ = NULL;
}
inline const ::modes3::protobuf::TrainReferenceSpeedCommand& Message::trainreferencespeedcommand() const {
  const ::modes3::protobuf::TrainReferenceSpeedCommand* p = trainreferencespeedcommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainReferenceSpeedCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainReferenceSpeedCommand*>(
      &::modes3::protobuf::_TrainReferenceSpeedCommand_default_instance_);
}
inline ::modes3::protobuf::TrainReferenceSpeedCommand* Message::mutable_trainreferencespeedcommand() {
  
  if (trainreferencespeedcommand_ == NULL) {
    trainreferencespeedcommand_ = new ::modes3::protobuf::TrainReferenceSpeedCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainReferenceSpeedCommand)
  return trainreferencespeedcommand_;
}
inline ::modes3::protobuf::TrainReferenceSpeedCommand* Message::release_trainreferencespeedcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainReferenceSpeedCommand)
  
  ::modes3::protobuf::TrainReferenceSpeedCommand* temp = trainreferencespeedcommand_;
  trainreferencespeedcommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_trainreferencespeedcommand(::modes3::protobuf::TrainReferenceSpeedCommand* trainreferencespeedcommand) {
  delete trainreferencespeedcommand_;
  trainreferencespeedcommand_ = trainreferencespeedcommand;
  if (trainreferencespeedcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainReferenceSpeedCommand)
}

// .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
inline bool Message::has_turnoutcommand() const {
  return this != internal_default_instance() && turnoutcommand_ != NULL;
}
inline void Message::clear_turnoutcommand() {
  if (GetArenaNoVirtual() == NULL && turnoutcommand_ != NULL) delete turnoutcommand_;
  turnoutcommand_ = NULL;
}
inline const ::modes3::protobuf::TurnoutCommand& Message::turnoutcommand() const {
  const ::modes3::protobuf::TurnoutCommand* p = turnoutcommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TurnoutCommand*>(
      &::modes3::protobuf::_TurnoutCommand_default_instance_);
}
inline ::modes3::protobuf::TurnoutCommand* Message::mutable_turnoutcommand() {
  
  if (turnoutcommand_ == NULL) {
    turnoutcommand_ = new ::modes3::protobuf::TurnoutCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutCommand)
  return turnoutcommand_;
}
inline ::modes3::protobuf::TurnoutCommand* Message::release_turnoutcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutCommand)
  
  ::modes3::protobuf::TurnoutCommand* temp = turnoutcommand_;
  turnoutcommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_turnoutcommand(::modes3::protobuf::TurnoutCommand* turnoutcommand) {
  delete turnoutcommand_;
  turnoutcommand_ = turnoutcommand;
  if (turnoutcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutCommand)
}

// .modes3.protobuf.TurnoutState turnoutState = 10;
inline bool Message::has_turnoutstate() const {
  return this != internal_default_instance() && turnoutstate_ != NULL;
}
inline void Message::clear_turnoutstate() {
  if (GetArenaNoVirtual() == NULL && turnoutstate_ != NULL) delete turnoutstate_;
  turnoutstate_ = NULL;
}
inline const ::modes3::protobuf::TurnoutState& Message::turnoutstate() const {
  const ::modes3::protobuf::TurnoutState* p = turnoutstate_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutState)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TurnoutState*>(
      &::modes3::protobuf::_TurnoutState_default_instance_);
}
inline ::modes3::protobuf::TurnoutState* Message::mutable_turnoutstate() {
  
  if (turnoutstate_ == NULL) {
    turnoutstate_ = new ::modes3::protobuf::TurnoutState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutState)
  return turnoutstate_;
}
inline ::modes3::protobuf::TurnoutState* Message::release_turnoutstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutState)
  
  ::modes3::protobuf::TurnoutState* temp = turnoutstate_;
  turnoutstate_ = NULL;
  return temp;
}
inline void Message::set_allocated_turnoutstate(::modes3::protobuf::TurnoutState* turnoutstate) {
  delete turnoutstate_;
  turnoutstate_ = turnoutstate;
  if (turnoutstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutState)
}

// .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
inline bool Message::has_segmentoccupancy() const {
  return this != internal_default_instance() && segmentoccupancy_ != NULL;
}
inline void Message::clear_segmentoccupancy() {
  if (GetArenaNoVirtual() == NULL && segmentoccupancy_ != NULL) delete segmentoccupancy_;
  segmentoccupancy_ = NULL;
}
inline const ::modes3::protobuf::SegmentOccupancy& Message::segmentoccupancy() const {
  const ::modes3::protobuf::SegmentOccupancy* p = segmentoccupancy_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentOccupancy)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::SegmentOccupancy*>(
      &::modes3::protobuf::_SegmentOccupancy_default_instance_);
}
inline ::modes3::protobuf::SegmentOccupancy* Message::mutable_segmentoccupancy() {
  
  if (segmentoccupancy_ == NULL) {
    segmentoccupancy_ = new ::modes3::protobuf::SegmentOccupancy;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentOccupancy)
  return segmentoccupancy_;
}
inline ::modes3::protobuf::SegmentOccupancy* Message::release_segmentoccupancy() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentOccupancy)
  
  ::modes3::protobuf::SegmentOccupancy* temp = segmentoccupancy_;
  segmentoccupancy_ = NULL;
  return temp;
}
inline void Message::set_allocated_segmentoccupancy(::modes3::protobuf::SegmentOccupancy* segmentoccupancy) {
  delete segmentoccupancy_;
  segmentoccupancy_ = segmentoccupancy;
  if (segmentoccupancy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentOccupancy)
}

// .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
inline bool Message::has_yakindureleaseto() const {
  return this != internal_default_instance() && yakindureleaseto_ != NULL;
}
inline void Message::clear_yakindureleaseto() {
  if (GetArenaNoVirtual() == NULL && yakindureleaseto_ != NULL) delete yakindureleaseto_;
  yakindureleaseto_ = NULL;
}
inline const ::modes3::protobuf::YakinduReleaseTo& Message::yakindureleaseto() const {
  const ::modes3::protobuf::YakinduReleaseTo* p = yakindureleaseto_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduReleaseTo)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::YakinduReleaseTo*>(
      &::modes3::protobuf::_YakinduReleaseTo_default_instance_);
}
inline ::modes3::protobuf::YakinduReleaseTo* Message::mutable_yakindureleaseto() {
  
  if (yakindureleaseto_ == NULL) {
    yakindureleaseto_ = new ::modes3::protobuf::YakinduReleaseTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduReleaseTo)
  return yakindureleaseto_;
}
inline ::modes3::protobuf::YakinduReleaseTo* Message::release_yakindureleaseto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduReleaseTo)
  
  ::modes3::protobuf::YakinduReleaseTo* temp = yakindureleaseto_;
  yakindureleaseto_ = NULL;
  return temp;
}
inline void Message::set_allocated_yakindureleaseto(::modes3::protobuf::YakinduReleaseTo* yakindureleaseto) {
  delete yakindureleaseto_;
  yakindureleaseto_ = yakindureleaseto;
  if (yakindureleaseto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduReleaseTo)
}

// .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
inline bool Message::has_yakinducangoto() const {
  return this != internal_default_instance() && yakinducangoto_ != NULL;
}
inline void Message::clear_yakinducangoto() {
  if (GetArenaNoVirtual() == NULL && yakinducangoto_ != NULL) delete yakinducangoto_;
  yakinducangoto_ = NULL;
}
inline const ::modes3::protobuf::YakinduCanGoTo& Message::yakinducangoto() const {
  const ::modes3::protobuf::YakinduCanGoTo* p = yakinducangoto_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduCanGoTo)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::YakinduCanGoTo*>(
      &::modes3::protobuf::_YakinduCanGoTo_default_instance_);
}
inline ::modes3::protobuf::YakinduCanGoTo* Message::mutable_yakinducangoto() {
  
  if (yakinducangoto_ == NULL) {
    yakinducangoto_ = new ::modes3::protobuf::YakinduCanGoTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduCanGoTo)
  return yakinducangoto_;
}
inline ::modes3::protobuf::YakinduCanGoTo* Message::release_yakinducangoto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduCanGoTo)
  
  ::modes3::protobuf::YakinduCanGoTo* temp = yakinducangoto_;
  yakinducangoto_ = NULL;
  return temp;
}
inline void Message::set_allocated_yakinducangoto(::modes3::protobuf::YakinduCanGoTo* yakinducangoto) {
  delete yakinducangoto_;
  yakinducangoto_ = yakinducangoto;
  if (yakinducangoto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduCanGoTo)
}

// .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
inline bool Message::has_yakinducannotgoto() const {
  return this != internal_default_instance() && yakinducannotgoto_ != NULL;
}
inline void Message::clear_yakinducannotgoto() {
  if (GetArenaNoVirtual() == NULL && yakinducannotgoto_ != NULL) delete yakinducannotgoto_;
  yakinducannotgoto_ = NULL;
}
inline const ::modes3::protobuf::YakinduCannotGoTo& Message::yakinducannotgoto() const {
  const ::modes3::protobuf::YakinduCannotGoTo* p = yakinducannotgoto_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduCannotGoTo)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::YakinduCannotGoTo*>(
      &::modes3::protobuf::_YakinduCannotGoTo_default_instance_);
}
inline ::modes3::protobuf::YakinduCannotGoTo* Message::mutable_yakinducannotgoto() {
  
  if (yakinducannotgoto_ == NULL) {
    yakinducannotgoto_ = new ::modes3::protobuf::YakinduCannotGoTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduCannotGoTo)
  return yakinducannotgoto_;
}
inline ::modes3::protobuf::YakinduCannotGoTo* Message::release_yakinducannotgoto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduCannotGoTo)
  
  ::modes3::protobuf::YakinduCannotGoTo* temp = yakinducannotgoto_;
  yakinducannotgoto_ = NULL;
  return temp;
}
inline void Message::set_allocated_yakinducannotgoto(::modes3::protobuf::YakinduCannotGoTo* yakinducannotgoto) {
  delete yakinducannotgoto_;
  yakinducannotgoto_ = yakinducannotgoto;
  if (yakinducannotgoto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduCannotGoTo)
}

// .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
inline bool Message::has_yakindureserveto() const {
  return this != internal_default_instance() && yakindureserveto_ != NULL;
}
inline void Message::clear_yakindureserveto() {
  if (GetArenaNoVirtual() == NULL && yakindureserveto_ != NULL) delete yakindureserveto_;
  yakindureserveto_ = NULL;
}
inline const ::modes3::protobuf::YakinduReserveTo& Message::yakindureserveto() const {
  const ::modes3::protobuf::YakinduReserveTo* p = yakindureserveto_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduReserveTo)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::YakinduReserveTo*>(
      &::modes3::protobuf::_YakinduReserveTo_default_instance_);
}
inline ::modes3::protobuf::YakinduReserveTo* Message::mutable_yakindureserveto() {
  
  if (yakindureserveto_ == NULL) {
    yakindureserveto_ = new ::modes3::protobuf::YakinduReserveTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduReserveTo)
  return yakindureserveto_;
}
inline ::modes3::protobuf::YakinduReserveTo* Message::release_yakindureserveto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduReserveTo)
  
  ::modes3::protobuf::YakinduReserveTo* temp = yakindureserveto_;
  yakindureserveto_ = NULL;
  return temp;
}
inline void Message::set_allocated_yakindureserveto(::modes3::protobuf::YakinduReserveTo* yakindureserveto) {
  delete yakindureserveto_;
  yakindureserveto_ = yakindureserveto;
  if (yakindureserveto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduReserveTo)
}

// .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
inline bool Message::has_turnoutreferencecommand() const {
  return this != internal_default_instance() && turnoutreferencecommand_ != NULL;
}
inline void Message::clear_turnoutreferencecommand() {
  if (GetArenaNoVirtual() == NULL && turnoutreferencecommand_ != NULL) delete turnoutreferencecommand_;
  turnoutreferencecommand_ = NULL;
}
inline const ::modes3::protobuf::TurnoutReferenceCommand& Message::turnoutreferencecommand() const {
  const ::modes3::protobuf::TurnoutReferenceCommand* p = turnoutreferencecommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutReferenceCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TurnoutReferenceCommand*>(
      &::modes3::protobuf::_TurnoutReferenceCommand_default_instance_);
}
inline ::modes3::protobuf::TurnoutReferenceCommand* Message::mutable_turnoutreferencecommand() {
  
  if (turnoutreferencecommand_ == NULL) {
    turnoutreferencecommand_ = new ::modes3::protobuf::TurnoutReferenceCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutReferenceCommand)
  return turnoutreferencecommand_;
}
inline ::modes3::protobuf::TurnoutReferenceCommand* Message::release_turnoutreferencecommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutReferenceCommand)
  
  ::modes3::protobuf::TurnoutReferenceCommand* temp = turnoutreferencecommand_;
  turnoutreferencecommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_turnoutreferencecommand(::modes3::protobuf::TurnoutReferenceCommand* turnoutreferencecommand) {
  delete turnoutreferencecommand_;
  turnoutreferencecommand_ = turnoutreferencecommand;
  if (turnoutreferencecommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutReferenceCommand)
}

// .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
inline bool Message::has_turnoutreferencestate() const {
  return this != internal_default_instance() && turnoutreferencestate_ != NULL;
}
inline void Message::clear_turnoutreferencestate() {
  if (GetArenaNoVirtual() == NULL && turnoutreferencestate_ != NULL) delete turnoutreferencestate_;
  turnoutreferencestate_ = NULL;
}
inline const ::modes3::protobuf::TurnoutReferenceState& Message::turnoutreferencestate() const {
  const ::modes3::protobuf::TurnoutReferenceState* p = turnoutreferencestate_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutReferenceState)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TurnoutReferenceState*>(
      &::modes3::protobuf::_TurnoutReferenceState_default_instance_);
}
inline ::modes3::protobuf::TurnoutReferenceState* Message::mutable_turnoutreferencestate() {
  
  if (turnoutreferencestate_ == NULL) {
    turnoutreferencestate_ = new ::modes3::protobuf::TurnoutReferenceState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutReferenceState)
  return turnoutreferencestate_;
}
inline ::modes3::protobuf::TurnoutReferenceState* Message::release_turnoutreferencestate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutReferenceState)
  
  ::modes3::protobuf::TurnoutReferenceState* temp = turnoutreferencestate_;
  turnoutreferencestate_ = NULL;
  return temp;
}
inline void Message::set_allocated_turnoutreferencestate(::modes3::protobuf::TurnoutReferenceState* turnoutreferencestate) {
  delete turnoutreferencestate_;
  turnoutreferencestate_ = turnoutreferencestate;
  if (turnoutreferencestate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutReferenceState)
}

// .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
inline bool Message::has_trainfunctioncommand() const {
  return this != internal_default_instance() && trainfunctioncommand_ != NULL;
}
inline void Message::clear_trainfunctioncommand() {
  if (GetArenaNoVirtual() == NULL && trainfunctioncommand_ != NULL) delete trainfunctioncommand_;
  trainfunctioncommand_ = NULL;
}
inline const ::modes3::protobuf::TrainFunctionCommand& Message::trainfunctioncommand() const {
  const ::modes3::protobuf::TrainFunctionCommand* p = trainfunctioncommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainFunctionCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainFunctionCommand*>(
      &::modes3::protobuf::_TrainFunctionCommand_default_instance_);
}
inline ::modes3::protobuf::TrainFunctionCommand* Message::mutable_trainfunctioncommand() {
  
  if (trainfunctioncommand_ == NULL) {
    trainfunctioncommand_ = new ::modes3::protobuf::TrainFunctionCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainFunctionCommand)
  return trainfunctioncommand_;
}
inline ::modes3::protobuf::TrainFunctionCommand* Message::release_trainfunctioncommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainFunctionCommand)
  
  ::modes3::protobuf::TrainFunctionCommand* temp = trainfunctioncommand_;
  trainfunctioncommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_trainfunctioncommand(::modes3::protobuf::TrainFunctionCommand* trainfunctioncommand) {
  delete trainfunctioncommand_;
  trainfunctioncommand_ = trainfunctioncommand;
  if (trainfunctioncommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainFunctionCommand)
}

// .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
inline bool Message::has_trainfunctionstate() const {
  return this != internal_default_instance() && trainfunctionstate_ != NULL;
}
inline void Message::clear_trainfunctionstate() {
  if (GetArenaNoVirtual() == NULL && trainfunctionstate_ != NULL) delete trainfunctionstate_;
  trainfunctionstate_ = NULL;
}
inline const ::modes3::protobuf::TrainFunctionState& Message::trainfunctionstate() const {
  const ::modes3::protobuf::TrainFunctionState* p = trainfunctionstate_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainFunctionState)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::TrainFunctionState*>(
      &::modes3::protobuf::_TrainFunctionState_default_instance_);
}
inline ::modes3::protobuf::TrainFunctionState* Message::mutable_trainfunctionstate() {
  
  if (trainfunctionstate_ == NULL) {
    trainfunctionstate_ = new ::modes3::protobuf::TrainFunctionState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainFunctionState)
  return trainfunctionstate_;
}
inline ::modes3::protobuf::TrainFunctionState* Message::release_trainfunctionstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainFunctionState)
  
  ::modes3::protobuf::TrainFunctionState* temp = trainfunctionstate_;
  trainfunctionstate_ = NULL;
  return temp;
}
inline void Message::set_allocated_trainfunctionstate(::modes3::protobuf::TrainFunctionState* trainfunctionstate) {
  delete trainfunctionstate_;
  trainfunctionstate_ = trainfunctionstate;
  if (trainfunctionstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainFunctionState)
}

// .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
inline bool Message::has_dccoperationscommand() const {
  return this != internal_default_instance() && dccoperationscommand_ != NULL;
}
inline void Message::clear_dccoperationscommand() {
  if (GetArenaNoVirtual() == NULL && dccoperationscommand_ != NULL) delete dccoperationscommand_;
  dccoperationscommand_ = NULL;
}
inline const ::modes3::protobuf::DccOperationsCommand& Message::dccoperationscommand() const {
  const ::modes3::protobuf::DccOperationsCommand* p = dccoperationscommand_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.dccOperationsCommand)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::DccOperationsCommand*>(
      &::modes3::protobuf::_DccOperationsCommand_default_instance_);
}
inline ::modes3::protobuf::DccOperationsCommand* Message::mutable_dccoperationscommand() {
  
  if (dccoperationscommand_ == NULL) {
    dccoperationscommand_ = new ::modes3::protobuf::DccOperationsCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.dccOperationsCommand)
  return dccoperationscommand_;
}
inline ::modes3::protobuf::DccOperationsCommand* Message::release_dccoperationscommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.dccOperationsCommand)
  
  ::modes3::protobuf::DccOperationsCommand* temp = dccoperationscommand_;
  dccoperationscommand_ = NULL;
  return temp;
}
inline void Message::set_allocated_dccoperationscommand(::modes3::protobuf::DccOperationsCommand* dccoperationscommand) {
  delete dccoperationscommand_;
  dccoperationscommand_ = dccoperationscommand;
  if (dccoperationscommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.dccOperationsCommand)
}

// .modes3.protobuf.DccOperationsState dccOperationsState = 21;
inline bool Message::has_dccoperationsstate() const {
  return this != internal_default_instance() && dccoperationsstate_ != NULL;
}
inline void Message::clear_dccoperationsstate() {
  if (GetArenaNoVirtual() == NULL && dccoperationsstate_ != NULL) delete dccoperationsstate_;
  dccoperationsstate_ = NULL;
}
inline const ::modes3::protobuf::DccOperationsState& Message::dccoperationsstate() const {
  const ::modes3::protobuf::DccOperationsState* p = dccoperationsstate_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.dccOperationsState)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::DccOperationsState*>(
      &::modes3::protobuf::_DccOperationsState_default_instance_);
}
inline ::modes3::protobuf::DccOperationsState* Message::mutable_dccoperationsstate() {
  
  if (dccoperationsstate_ == NULL) {
    dccoperationsstate_ = new ::modes3::protobuf::DccOperationsState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.dccOperationsState)
  return dccoperationsstate_;
}
inline ::modes3::protobuf::DccOperationsState* Message::release_dccoperationsstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.dccOperationsState)
  
  ::modes3::protobuf::DccOperationsState* temp = dccoperationsstate_;
  dccoperationsstate_ = NULL;
  return temp;
}
inline void Message::set_allocated_dccoperationsstate(::modes3::protobuf::DccOperationsState* dccoperationsstate) {
  delete dccoperationsstate_;
  dccoperationsstate_ = dccoperationsstate;
  if (dccoperationsstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.dccOperationsState)
}

// .modes3.protobuf.SendAllStatus allStatus = 22;
inline bool Message::has_allstatus() const {
  return this != internal_default_instance() && allstatus_ != NULL;
}
inline void Message::clear_allstatus() {
  if (GetArenaNoVirtual() == NULL && allstatus_ != NULL) delete allstatus_;
  allstatus_ = NULL;
}
inline const ::modes3::protobuf::SendAllStatus& Message::allstatus() const {
  const ::modes3::protobuf::SendAllStatus* p = allstatus_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.allStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::SendAllStatus*>(
      &::modes3::protobuf::_SendAllStatus_default_instance_);
}
inline ::modes3::protobuf::SendAllStatus* Message::mutable_allstatus() {
  
  if (allstatus_ == NULL) {
    allstatus_ = new ::modes3::protobuf::SendAllStatus;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.allStatus)
  return allstatus_;
}
inline ::modes3::protobuf::SendAllStatus* Message::release_allstatus() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.allStatus)
  
  ::modes3::protobuf::SendAllStatus* temp = allstatus_;
  allstatus_ = NULL;
  return temp;
}
inline void Message::set_allocated_allstatus(::modes3::protobuf::SendAllStatus* allstatus) {
  delete allstatus_;
  allstatus_ = allstatus;
  if (allstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.allStatus)
}

// .modes3.protobuf.ComputerVisionObjectPositions computerVisionObjectPositions = 23;
inline bool Message::has_computervisionobjectpositions() const {
  return this != internal_default_instance() && computervisionobjectpositions_ != NULL;
}
inline void Message::clear_computervisionobjectpositions() {
  if (GetArenaNoVirtual() == NULL && computervisionobjectpositions_ != NULL) delete computervisionobjectpositions_;
  computervisionobjectpositions_ = NULL;
}
inline const ::modes3::protobuf::ComputerVisionObjectPositions& Message::computervisionobjectpositions() const {
  const ::modes3::protobuf::ComputerVisionObjectPositions* p = computervisionobjectpositions_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.computerVisionObjectPositions)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::ComputerVisionObjectPositions*>(
      &::modes3::protobuf::_ComputerVisionObjectPositions_default_instance_);
}
inline ::modes3::protobuf::ComputerVisionObjectPositions* Message::mutable_computervisionobjectpositions() {
  
  if (computervisionobjectpositions_ == NULL) {
    computervisionobjectpositions_ = new ::modes3::protobuf::ComputerVisionObjectPositions;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.computerVisionObjectPositions)
  return computervisionobjectpositions_;
}
inline ::modes3::protobuf::ComputerVisionObjectPositions* Message::release_computervisionobjectpositions() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.computerVisionObjectPositions)
  
  ::modes3::protobuf::ComputerVisionObjectPositions* temp = computervisionobjectpositions_;
  computervisionobjectpositions_ = NULL;
  return temp;
}
inline void Message::set_allocated_computervisionobjectpositions(::modes3::protobuf::ComputerVisionObjectPositions* computervisionobjectpositions) {
  delete computervisionobjectpositions_;
  computervisionobjectpositions_ = computervisionobjectpositions;
  if (computervisionobjectpositions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.computerVisionObjectPositions)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto__INCLUDED
