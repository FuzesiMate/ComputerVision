// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ComputerVisionObjectPositions.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ComputerVisionObjectPositions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace modes3 {
namespace protobuf {
class ComputerVisionObjectPositions_PhysicalObjectsEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry>
     _instance;
} _ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_;
class ComputerVisionObjectPositionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ComputerVisionObjectPositions>
     _instance;
} _ComputerVisionObjectPositions_default_instance_;
class PhysicalObject_MarkersEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PhysicalObject::PhysicalObject_MarkersEntry>
     _instance;
} _PhysicalObject_MarkersEntry_default_instance_;
class PhysicalObjectDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PhysicalObject>
     _instance;
} _PhysicalObject_default_instance_;
class MarkerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Marker>
     _instance;
} _Marker_default_instance_;
class ThreeDPositionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ThreeDPosition>
     _instance;
} _ThreeDPosition_default_instance_;
class TwoDPositionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TwoDPosition>
     _instance;
} _TwoDPosition_default_instance_;

namespace protobuf_ComputerVisionObjectPositions_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerVisionObjectPositions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerVisionObjectPositions, physicalobjects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerVisionObjectPositions, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComputerVisionObjectPositions, frameindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicalObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicalObject, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhysicalObject, markers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marker, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marker, realposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marker, screenpositions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Marker, tracked_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreeDPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreeDPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreeDPosition, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreeDPosition, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TwoDPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TwoDPosition, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TwoDPosition, y_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ComputerVisionObjectPositions)},
  { 8, -1, sizeof(PhysicalObject)},
  { 15, -1, sizeof(Marker)},
  { 24, -1, sizeof(ThreeDPosition)},
  { 32, -1, sizeof(TwoDPosition)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComputerVisionObjectPositions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhysicalObject_MarkersEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhysicalObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Marker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ThreeDPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TwoDPosition_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ComputerVisionObjectPositions.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[0].reflection = ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::CreateReflection(file_level_metadata[0].descriptor, _ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_._instance.get_mutable());
file_level_metadata[2].reflection = PhysicalObject::PhysicalObject_MarkersEntry::CreateReflection(file_level_metadata[2].descriptor, _PhysicalObject_MarkersEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_);_ComputerVisionObjectPositions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ComputerVisionObjectPositions_default_instance_);_PhysicalObject_MarkersEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PhysicalObject_MarkersEntry_default_instance_);_PhysicalObject_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PhysicalObject_default_instance_);_Marker_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Marker_default_instance_);_ThreeDPosition_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ThreeDPosition_default_instance_);_TwoDPosition_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TwoDPosition_default_instance_);_ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_._instance.get_mutable()->set_default_instance(_ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_._instance.get_mutable());
  _ComputerVisionObjectPositions_PhysicalObjectsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PhysicalObject_MarkersEntry_default_instance_._instance.get_mutable()->set_default_instance(_PhysicalObject_MarkersEntry_default_instance_._instance.get_mutable());
  _PhysicalObject_MarkersEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _Marker_default_instance_._instance.get_mutable()->realposition_ = const_cast< ::modes3::protobuf::ThreeDPosition*>(
      ::modes3::protobuf::ThreeDPosition::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#ComputerVisionObjectPositions.proto\022\017m"
      "odes3.protobuf\"\375\001\n\035ComputerVisionObjectP"
      "ositions\022\\\n\017physicalObjects\030\001 \003(\0132C.mode"
      "s3.protobuf.ComputerVisionObjectPosition"
      "s.PhysicalObjectsEntry\022\021\n\ttimestamp\030\002 \001("
      "\003\022\022\n\nframeindex\030\003 \001(\003\032W\n\024PhysicalObjects"
      "Entry\022\013\n\003key\030\001 \001(\t\022.\n\005value\030\002 \001(\0132\037.mode"
      "s3.protobuf.PhysicalObject:\0028\001\"\246\001\n\016Physi"
      "calObject\022\014\n\004name\030\001 \001(\t\022=\n\007markers\030\002 \003(\013"
      "2,.modes3.protobuf.PhysicalObject.Marker"
      "sEntry\032G\n\014MarkersEntry\022\013\n\003key\030\001 \001(\t\022&\n\005v"
      "alue\030\002 \001(\0132\027.modes3.protobuf.Marker:\0028\001\""
      "\226\001\n\006Marker\022\014\n\004name\030\001 \001(\t\0225\n\014realposition"
      "\030\002 \001(\0132\037.modes3.protobuf.ThreeDPosition\022"
      "6\n\017screenPositions\030\003 \003(\0132\035.modes3.protob"
      "uf.TwoDPosition\022\017\n\007tracked\030\004 \003(\010\"1\n\016Thre"
      "eDPosition\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 "
      "\001(\001\"$\n\014TwoDPosition\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001("
      "\001B0\n,hu.bme.mit.inf.modes3.messaging.mms"
      ".messagesP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 779);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ComputerVisionObjectPositions.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ComputerVisionObjectPositions_2eproto


// ===================================================================

ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::ComputerVisionObjectPositions_PhysicalObjectsEntry() {}
ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::ComputerVisionObjectPositions_PhysicalObjectsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[0];
}
void ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ComputerVisionObjectPositions::ComputerVisionObjectPositions_PhysicalObjectsEntry::MergeFrom(const ComputerVisionObjectPositions_PhysicalObjectsEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComputerVisionObjectPositions::kPhysicalObjectsFieldNumber;
const int ComputerVisionObjectPositions::kTimestampFieldNumber;
const int ComputerVisionObjectPositions::kFrameindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComputerVisionObjectPositions::ComputerVisionObjectPositions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.ComputerVisionObjectPositions)
}
ComputerVisionObjectPositions::ComputerVisionObjectPositions(const ComputerVisionObjectPositions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  physicalobjects_.MergeFrom(from.physicalobjects_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&frameindex_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(frameindex_));
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.ComputerVisionObjectPositions)
}

void ComputerVisionObjectPositions::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frameindex_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(frameindex_));
  _cached_size_ = 0;
}

ComputerVisionObjectPositions::~ComputerVisionObjectPositions() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.ComputerVisionObjectPositions)
  SharedDtor();
}

void ComputerVisionObjectPositions::SharedDtor() {
}

void ComputerVisionObjectPositions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComputerVisionObjectPositions::descriptor() {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComputerVisionObjectPositions& ComputerVisionObjectPositions::default_instance() {
  protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  return *internal_default_instance();
}

ComputerVisionObjectPositions* ComputerVisionObjectPositions::New(::google::protobuf::Arena* arena) const {
  ComputerVisionObjectPositions* n = new ComputerVisionObjectPositions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComputerVisionObjectPositions::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.ComputerVisionObjectPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  physicalobjects_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frameindex_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(frameindex_));
  _internal_metadata_.Clear();
}

bool ComputerVisionObjectPositions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.ComputerVisionObjectPositions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ComputerVisionObjectPositions_PhysicalObjectsEntry::Parser< ::google::protobuf::internal::MapField<
              ComputerVisionObjectPositions_PhysicalObjectsEntry,
              ::std::string, ::modes3::protobuf::PhysicalObject,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject > > parser(&physicalobjects_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "modes3.protobuf.ComputerVisionObjectPositions.PhysicalObjectsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 frameindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.ComputerVisionObjectPositions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.ComputerVisionObjectPositions)
  return false;
#undef DO_
}

void ComputerVisionObjectPositions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.ComputerVisionObjectPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
  if (!this->physicalobjects().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "modes3.protobuf.ComputerVisionObjectPositions.PhysicalObjectsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->physicalobjects().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->physicalobjects().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_iterator
          it = this->physicalobjects().begin();
          it != this->physicalobjects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ComputerVisionObjectPositions_PhysicalObjectsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(physicalobjects_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ComputerVisionObjectPositions_PhysicalObjectsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_iterator
          it = this->physicalobjects().begin();
          it != this->physicalobjects().end(); ++it) {
        entry.reset(physicalobjects_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // int64 frameindex = 3;
  if (this->frameindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->frameindex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.ComputerVisionObjectPositions)
}

::google::protobuf::uint8* ComputerVisionObjectPositions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.ComputerVisionObjectPositions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
  if (!this->physicalobjects().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "modes3.protobuf.ComputerVisionObjectPositions.PhysicalObjectsEntry.key");
      }
    };

    if (deterministic &&
        this->physicalobjects().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->physicalobjects().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_iterator
          it = this->physicalobjects().begin();
          it != this->physicalobjects().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ComputerVisionObjectPositions_PhysicalObjectsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(physicalobjects_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ComputerVisionObjectPositions_PhysicalObjectsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_iterator
          it = this->physicalobjects().begin();
          it != this->physicalobjects().end(); ++it) {
        entry.reset(physicalobjects_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // int64 frameindex = 3;
  if (this->frameindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->frameindex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.ComputerVisionObjectPositions)
  return target;
}

size_t ComputerVisionObjectPositions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.ComputerVisionObjectPositions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->physicalobjects_size());
  {
    ::google::protobuf::scoped_ptr<ComputerVisionObjectPositions_PhysicalObjectsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >::const_iterator
        it = this->physicalobjects().begin();
        it != this->physicalobjects().end(); ++it) {
      entry.reset(physicalobjects_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int64 frameindex = 3;
  if (this->frameindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frameindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComputerVisionObjectPositions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.ComputerVisionObjectPositions)
  GOOGLE_DCHECK_NE(&from, this);
  const ComputerVisionObjectPositions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComputerVisionObjectPositions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.ComputerVisionObjectPositions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.ComputerVisionObjectPositions)
    MergeFrom(*source);
  }
}

void ComputerVisionObjectPositions::MergeFrom(const ComputerVisionObjectPositions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.ComputerVisionObjectPositions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  physicalobjects_.MergeFrom(from.physicalobjects_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.frameindex() != 0) {
    set_frameindex(from.frameindex());
  }
}

void ComputerVisionObjectPositions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.ComputerVisionObjectPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComputerVisionObjectPositions::CopyFrom(const ComputerVisionObjectPositions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.ComputerVisionObjectPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComputerVisionObjectPositions::IsInitialized() const {
  return true;
}

void ComputerVisionObjectPositions::Swap(ComputerVisionObjectPositions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComputerVisionObjectPositions::InternalSwap(ComputerVisionObjectPositions* other) {
  using std::swap;
  physicalobjects_.Swap(&other->physicalobjects_);
  swap(timestamp_, other->timestamp_);
  swap(frameindex_, other->frameindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComputerVisionObjectPositions::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComputerVisionObjectPositions

// map<string, .modes3.protobuf.PhysicalObject> physicalObjects = 1;
int ComputerVisionObjectPositions::physicalobjects_size() const {
  return physicalobjects_.size();
}
void ComputerVisionObjectPositions::clear_physicalobjects() {
  physicalobjects_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >&
ComputerVisionObjectPositions::physicalobjects() const {
  // @@protoc_insertion_point(field_map:modes3.protobuf.ComputerVisionObjectPositions.physicalObjects)
  return physicalobjects_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::modes3::protobuf::PhysicalObject >*
ComputerVisionObjectPositions::mutable_physicalobjects() {
  // @@protoc_insertion_point(field_mutable_map:modes3.protobuf.ComputerVisionObjectPositions.physicalObjects)
  return physicalobjects_.MutableMap();
}

// int64 timestamp = 2;
void ComputerVisionObjectPositions::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ComputerVisionObjectPositions::timestamp() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ComputerVisionObjectPositions.timestamp)
  return timestamp_;
}
void ComputerVisionObjectPositions::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ComputerVisionObjectPositions.timestamp)
}

// int64 frameindex = 3;
void ComputerVisionObjectPositions::clear_frameindex() {
  frameindex_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ComputerVisionObjectPositions::frameindex() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ComputerVisionObjectPositions.frameindex)
  return frameindex_;
}
void ComputerVisionObjectPositions::set_frameindex(::google::protobuf::int64 value) {
  
  frameindex_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ComputerVisionObjectPositions.frameindex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PhysicalObject::PhysicalObject_MarkersEntry::PhysicalObject_MarkersEntry() {}
PhysicalObject::PhysicalObject_MarkersEntry::PhysicalObject_MarkersEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PhysicalObject::PhysicalObject_MarkersEntry::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[2];
}
void PhysicalObject::PhysicalObject_MarkersEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PhysicalObject::PhysicalObject_MarkersEntry::MergeFrom(const PhysicalObject_MarkersEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhysicalObject::kNameFieldNumber;
const int PhysicalObject::kMarkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhysicalObject::PhysicalObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.PhysicalObject)
}
PhysicalObject::PhysicalObject(const PhysicalObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  markers_.MergeFrom(from.markers_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.PhysicalObject)
}

void PhysicalObject::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PhysicalObject::~PhysicalObject() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.PhysicalObject)
  SharedDtor();
}

void PhysicalObject::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhysicalObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhysicalObject::descriptor() {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhysicalObject& PhysicalObject::default_instance() {
  protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhysicalObject* PhysicalObject::New(::google::protobuf::Arena* arena) const {
  PhysicalObject* n = new PhysicalObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhysicalObject::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.PhysicalObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  markers_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PhysicalObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.PhysicalObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "modes3.protobuf.PhysicalObject.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .modes3.protobuf.Marker> markers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PhysicalObject_MarkersEntry::Parser< ::google::protobuf::internal::MapField<
              PhysicalObject_MarkersEntry,
              ::std::string, ::modes3::protobuf::Marker,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker > > parser(&markers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "modes3.protobuf.PhysicalObject.MarkersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.PhysicalObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.PhysicalObject)
  return false;
#undef DO_
}

void PhysicalObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.PhysicalObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "modes3.protobuf.PhysicalObject.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // map<string, .modes3.protobuf.Marker> markers = 2;
  if (!this->markers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "modes3.protobuf.PhysicalObject.MarkersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->markers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->markers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_iterator
          it = this->markers().begin();
          it != this->markers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PhysicalObject_MarkersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(markers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PhysicalObject_MarkersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_iterator
          it = this->markers().begin();
          it != this->markers().end(); ++it) {
        entry.reset(markers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.PhysicalObject)
}

::google::protobuf::uint8* PhysicalObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.PhysicalObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "modes3.protobuf.PhysicalObject.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // map<string, .modes3.protobuf.Marker> markers = 2;
  if (!this->markers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "modes3.protobuf.PhysicalObject.MarkersEntry.key");
      }
    };

    if (deterministic &&
        this->markers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->markers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_iterator
          it = this->markers().begin();
          it != this->markers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PhysicalObject_MarkersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(markers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PhysicalObject_MarkersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_iterator
          it = this->markers().begin();
          it != this->markers().end(); ++it) {
        entry.reset(markers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.PhysicalObject)
  return target;
}

size_t PhysicalObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.PhysicalObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .modes3.protobuf.Marker> markers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->markers_size());
  {
    ::google::protobuf::scoped_ptr<PhysicalObject_MarkersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >::const_iterator
        it = this->markers().begin();
        it != this->markers().end(); ++it) {
      entry.reset(markers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhysicalObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.PhysicalObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PhysicalObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhysicalObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.PhysicalObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.PhysicalObject)
    MergeFrom(*source);
  }
}

void PhysicalObject::MergeFrom(const PhysicalObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.PhysicalObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  markers_.MergeFrom(from.markers_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PhysicalObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.PhysicalObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhysicalObject::CopyFrom(const PhysicalObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.PhysicalObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhysicalObject::IsInitialized() const {
  return true;
}

void PhysicalObject::Swap(PhysicalObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhysicalObject::InternalSwap(PhysicalObject* other) {
  using std::swap;
  markers_.Swap(&other->markers_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhysicalObject::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhysicalObject

// string name = 1;
void PhysicalObject::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PhysicalObject::name() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.PhysicalObject.name)
  return name_.GetNoArena();
}
void PhysicalObject::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.PhysicalObject.name)
}
#if LANG_CXX11
void PhysicalObject::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:modes3.protobuf.PhysicalObject.name)
}
#endif
void PhysicalObject::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:modes3.protobuf.PhysicalObject.name)
}
void PhysicalObject::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:modes3.protobuf.PhysicalObject.name)
}
::std::string* PhysicalObject::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.PhysicalObject.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PhysicalObject::release_name() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.PhysicalObject.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PhysicalObject::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.PhysicalObject.name)
}

// map<string, .modes3.protobuf.Marker> markers = 2;
int PhysicalObject::markers_size() const {
  return markers_.size();
}
void PhysicalObject::clear_markers() {
  markers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >&
PhysicalObject::markers() const {
  // @@protoc_insertion_point(field_map:modes3.protobuf.PhysicalObject.markers)
  return markers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::modes3::protobuf::Marker >*
PhysicalObject::mutable_markers() {
  // @@protoc_insertion_point(field_mutable_map:modes3.protobuf.PhysicalObject.markers)
  return markers_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Marker::kNameFieldNumber;
const int Marker::kRealpositionFieldNumber;
const int Marker::kScreenPositionsFieldNumber;
const int Marker::kTrackedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Marker::Marker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.Marker)
}
Marker::Marker(const Marker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      screenpositions_(from.screenpositions_),
      tracked_(from.tracked_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_realposition()) {
    realposition_ = new ::modes3::protobuf::ThreeDPosition(*from.realposition_);
  } else {
    realposition_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.Marker)
}

void Marker::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realposition_ = NULL;
  _cached_size_ = 0;
}

Marker::~Marker() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.Marker)
  SharedDtor();
}

void Marker::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete realposition_;
}

void Marker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Marker::descriptor() {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Marker& Marker::default_instance() {
  protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  return *internal_default_instance();
}

Marker* Marker::New(::google::protobuf::Arena* arena) const {
  Marker* n = new Marker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Marker::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screenpositions_.Clear();
  tracked_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && realposition_ != NULL) {
    delete realposition_;
  }
  realposition_ = NULL;
  _internal_metadata_.Clear();
}

bool Marker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.Marker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "modes3.protobuf.Marker.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .modes3.protobuf.ThreeDPosition realposition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_realposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_screenpositions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool tracked = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_tracked())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34u, input, this->mutable_tracked())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.Marker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.Marker)
  return false;
#undef DO_
}

void Marker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "modes3.protobuf.Marker.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .modes3.protobuf.ThreeDPosition realposition = 2;
  if (this->has_realposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->realposition_, output);
  }

  // repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->screenpositions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->screenpositions(static_cast<int>(i)), output);
  }

  // repeated bool tracked = 4;
  if (this->tracked_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tracked_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->tracked().data(), this->tracked_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.Marker)
}

::google::protobuf::uint8* Marker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "modes3.protobuf.Marker.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .modes3.protobuf.ThreeDPosition realposition = 2;
  if (this->has_realposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->realposition_, deterministic, target);
  }

  // repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->screenpositions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->screenpositions(static_cast<int>(i)), deterministic, target);
  }

  // repeated bool tracked = 4;
  if (this->tracked_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _tracked_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->tracked_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.Marker)
  return target;
}

size_t Marker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.Marker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->screenpositions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->screenpositions(static_cast<int>(i)));
    }
  }

  // repeated bool tracked = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tracked_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tracked_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .modes3.protobuf.ThreeDPosition realposition = 2;
  if (this->has_realposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->realposition_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Marker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.Marker)
  GOOGLE_DCHECK_NE(&from, this);
  const Marker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Marker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.Marker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.Marker)
    MergeFrom(*source);
  }
}

void Marker::MergeFrom(const Marker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.Marker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  screenpositions_.MergeFrom(from.screenpositions_);
  tracked_.MergeFrom(from.tracked_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_realposition()) {
    mutable_realposition()->::modes3::protobuf::ThreeDPosition::MergeFrom(from.realposition());
  }
}

void Marker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.Marker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Marker::CopyFrom(const Marker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.Marker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Marker::IsInitialized() const {
  return true;
}

void Marker::Swap(Marker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Marker::InternalSwap(Marker* other) {
  using std::swap;
  screenpositions_.InternalSwap(&other->screenpositions_);
  tracked_.InternalSwap(&other->tracked_);
  name_.Swap(&other->name_);
  swap(realposition_, other->realposition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Marker::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Marker

// string name = 1;
void Marker::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Marker::name() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.name)
  return name_.GetNoArena();
}
void Marker::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.Marker.name)
}
#if LANG_CXX11
void Marker::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:modes3.protobuf.Marker.name)
}
#endif
void Marker::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:modes3.protobuf.Marker.name)
}
void Marker::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:modes3.protobuf.Marker.name)
}
::std::string* Marker::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Marker::release_name() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Marker.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Marker::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Marker.name)
}

// .modes3.protobuf.ThreeDPosition realposition = 2;
bool Marker::has_realposition() const {
  return this != internal_default_instance() && realposition_ != NULL;
}
void Marker::clear_realposition() {
  if (GetArenaNoVirtual() == NULL && realposition_ != NULL) delete realposition_;
  realposition_ = NULL;
}
const ::modes3::protobuf::ThreeDPosition& Marker::realposition() const {
  const ::modes3::protobuf::ThreeDPosition* p = realposition_;
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.realposition)
  return p != NULL ? *p : *reinterpret_cast<const ::modes3::protobuf::ThreeDPosition*>(
      &::modes3::protobuf::_ThreeDPosition_default_instance_);
}
::modes3::protobuf::ThreeDPosition* Marker::mutable_realposition() {
  
  if (realposition_ == NULL) {
    realposition_ = new ::modes3::protobuf::ThreeDPosition;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.realposition)
  return realposition_;
}
::modes3::protobuf::ThreeDPosition* Marker::release_realposition() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Marker.realposition)
  
  ::modes3::protobuf::ThreeDPosition* temp = realposition_;
  realposition_ = NULL;
  return temp;
}
void Marker::set_allocated_realposition(::modes3::protobuf::ThreeDPosition* realposition) {
  delete realposition_;
  realposition_ = realposition;
  if (realposition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Marker.realposition)
}

// repeated .modes3.protobuf.TwoDPosition screenPositions = 3;
int Marker::screenpositions_size() const {
  return screenpositions_.size();
}
void Marker::clear_screenpositions() {
  screenpositions_.Clear();
}
const ::modes3::protobuf::TwoDPosition& Marker::screenpositions(int index) const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Get(index);
}
::modes3::protobuf::TwoDPosition* Marker::mutable_screenpositions(int index) {
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Mutable(index);
}
::modes3::protobuf::TwoDPosition* Marker::add_screenpositions() {
  // @@protoc_insertion_point(field_add:modes3.protobuf.Marker.screenPositions)
  return screenpositions_.Add();
}
::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >*
Marker::mutable_screenpositions() {
  // @@protoc_insertion_point(field_mutable_list:modes3.protobuf.Marker.screenPositions)
  return &screenpositions_;
}
const ::google::protobuf::RepeatedPtrField< ::modes3::protobuf::TwoDPosition >&
Marker::screenpositions() const {
  // @@protoc_insertion_point(field_list:modes3.protobuf.Marker.screenPositions)
  return screenpositions_;
}

// repeated bool tracked = 4;
int Marker::tracked_size() const {
  return tracked_.size();
}
void Marker::clear_tracked() {
  tracked_.Clear();
}
bool Marker::tracked(int index) const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Marker.tracked)
  return tracked_.Get(index);
}
void Marker::set_tracked(int index, bool value) {
  tracked_.Set(index, value);
  // @@protoc_insertion_point(field_set:modes3.protobuf.Marker.tracked)
}
void Marker::add_tracked(bool value) {
  tracked_.Add(value);
  // @@protoc_insertion_point(field_add:modes3.protobuf.Marker.tracked)
}
const ::google::protobuf::RepeatedField< bool >&
Marker::tracked() const {
  // @@protoc_insertion_point(field_list:modes3.protobuf.Marker.tracked)
  return tracked_;
}
::google::protobuf::RepeatedField< bool >*
Marker::mutable_tracked() {
  // @@protoc_insertion_point(field_mutable_list:modes3.protobuf.Marker.tracked)
  return &tracked_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThreeDPosition::kXFieldNumber;
const int ThreeDPosition::kYFieldNumber;
const int ThreeDPosition::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThreeDPosition::ThreeDPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.ThreeDPosition)
}
ThreeDPosition::ThreeDPosition(const ThreeDPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.ThreeDPosition)
}

void ThreeDPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

ThreeDPosition::~ThreeDPosition() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.ThreeDPosition)
  SharedDtor();
}

void ThreeDPosition::SharedDtor() {
}

void ThreeDPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThreeDPosition::descriptor() {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ThreeDPosition& ThreeDPosition::default_instance() {
  protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  return *internal_default_instance();
}

ThreeDPosition* ThreeDPosition::New(::google::protobuf::Arena* arena) const {
  ThreeDPosition* n = new ThreeDPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThreeDPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.ThreeDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ThreeDPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.ThreeDPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.ThreeDPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.ThreeDPosition)
  return false;
#undef DO_
}

void ThreeDPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.ThreeDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.ThreeDPosition)
}

::google::protobuf::uint8* ThreeDPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.ThreeDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.ThreeDPosition)
  return target;
}

size_t ThreeDPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.ThreeDPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThreeDPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.ThreeDPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ThreeDPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThreeDPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.ThreeDPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.ThreeDPosition)
    MergeFrom(*source);
  }
}

void ThreeDPosition::MergeFrom(const ThreeDPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.ThreeDPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ThreeDPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.ThreeDPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreeDPosition::CopyFrom(const ThreeDPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.ThreeDPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreeDPosition::IsInitialized() const {
  return true;
}

void ThreeDPosition::Swap(ThreeDPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThreeDPosition::InternalSwap(ThreeDPosition* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThreeDPosition::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThreeDPosition

// double x = 1;
void ThreeDPosition::clear_x() {
  x_ = 0;
}
double ThreeDPosition::x() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.x)
  return x_;
}
void ThreeDPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.x)
}

// double y = 2;
void ThreeDPosition::clear_y() {
  y_ = 0;
}
double ThreeDPosition::y() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.y)
  return y_;
}
void ThreeDPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.y)
}

// double z = 3;
void ThreeDPosition::clear_z() {
  z_ = 0;
}
double ThreeDPosition::z() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.ThreeDPosition.z)
  return z_;
}
void ThreeDPosition::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.ThreeDPosition.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TwoDPosition::kXFieldNumber;
const int TwoDPosition::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TwoDPosition::TwoDPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.TwoDPosition)
}
TwoDPosition::TwoDPosition(const TwoDPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.TwoDPosition)
}

void TwoDPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

TwoDPosition::~TwoDPosition() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.TwoDPosition)
  SharedDtor();
}

void TwoDPosition::SharedDtor() {
}

void TwoDPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TwoDPosition::descriptor() {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TwoDPosition& TwoDPosition::default_instance() {
  protobuf_ComputerVisionObjectPositions_2eproto::InitDefaults();
  return *internal_default_instance();
}

TwoDPosition* TwoDPosition::New(::google::protobuf::Arena* arena) const {
  TwoDPosition* n = new TwoDPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TwoDPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.TwoDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool TwoDPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.TwoDPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.TwoDPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.TwoDPosition)
  return false;
#undef DO_
}

void TwoDPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.TwoDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.TwoDPosition)
}

::google::protobuf::uint8* TwoDPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.TwoDPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.TwoDPosition)
  return target;
}

size_t TwoDPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.TwoDPosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TwoDPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.TwoDPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const TwoDPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TwoDPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.TwoDPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.TwoDPosition)
    MergeFrom(*source);
  }
}

void TwoDPosition::MergeFrom(const TwoDPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.TwoDPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TwoDPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.TwoDPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TwoDPosition::CopyFrom(const TwoDPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.TwoDPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TwoDPosition::IsInitialized() const {
  return true;
}

void TwoDPosition::Swap(TwoDPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TwoDPosition::InternalSwap(TwoDPosition* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TwoDPosition::GetMetadata() const {
  protobuf_ComputerVisionObjectPositions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ComputerVisionObjectPositions_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TwoDPosition

// double x = 1;
void TwoDPosition::clear_x() {
  x_ = 0;
}
double TwoDPosition::x() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TwoDPosition.x)
  return x_;
}
void TwoDPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TwoDPosition.x)
}

// double y = 2;
void TwoDPosition::clear_y() {
  y_ = 0;
}
double TwoDPosition::y() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TwoDPosition.y)
  return y_;
}
void TwoDPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TwoDPosition.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)
